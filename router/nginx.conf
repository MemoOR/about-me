# turn off daemonization since we're running in a container
daemon off;

user nginx;
worker_processes auto;
error_log /dev/stdout;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  real_ip_recursive on;
  real_ip_header   X-Forwarded-For;
  proxy_set_header X-Forwarded-For $remote_addr;

  log_format  main  '$host $remote_addr - $remote_user [$time_local] "REDACTED" '
                    '$status $body_bytes_sent "REDACTED" '
                    '"$http_user_agent" "$http_x_forwarded_for" "$http_origin"';

  access_log        /dev/stdout main;
  sendfile          on;
  keepalive_timeout 65;
  proxy_read_timeout 300;
  server_tokens off;

  upstream app_server {
    server appweb:7168;
  }

  # Redirect www to non-www
  server {
    listen      80;
    listen      [::]:80;
    server_name ~^www\.(?<domain>.+)$;
    return      301 $scheme://$domain$request_uri;
  }

  # default server block, redirect http to https
  server {
    listen      80 default_server;
    listen      [::]:80 default_server;
    return 301 https://$host$request_uri;
  }

  # HTTPS server block
  server {
    listen      443 ssl;
    listen      [::]:443 ssl;
    http2       on;
    server_name _;

    # SSL configuration here
    include _template/ssl.conf;
    include _template/hsts.conf;

    location / {
      try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
      gzip_static on;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_buffering off;
      proxy_redirect off;
      proxy_pass http://app_server;
    }

  }
}